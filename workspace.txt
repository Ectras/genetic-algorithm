const GENES_SIZE: usize = 4100;
const POPULATION_SIZE: usize = 100;
!!! Bordering stack overflow !!!


const GENES_SIZE: usize = 4000;
const POPULATION_SIZE: usize = 100;

   MatrixGenotype::<f32, GENES_SIZE, { POPULATION_SIZE + 1 }> nalgebra
      finish - iteration: 0
        Init: 695.91µs
        Select: 8.690551ms
        Crossover: 34.889828ms
        Mutate: 2.877416ms
        Fitness: 610.161µs
        UpdateBestChromosome: 702.403µs
        Other: 3.183911ms
        Total: 51.65018ms

   MatrixGenotype::<f32, GENES_SIZE, { POPULATION_SIZE + 1 }> plain => nalgebra adds no overhead, even when iterating swap.
    finish - iteration: 0
      Init: 882.161µs
      Select: 9.849975ms
      Crossover: 37.083578ms
      Mutate: 2.926757ms
      Fitness: 665.537µs
      UpdateBestChromosome: 770.802µs
      Other: 3.386176ms
      Total: 55.564986ms

   RangeGenotype
      finish - iteration: 0
        Init: 2.676198ms
        Select: 11.464497ms
        Crossover: 75.495566ms
        Mutate: 4.736304ms
        Fitness: 977.106µs
        UpdateBestChromosome: 6.734772ms
        Other: 911.445µs
        Total: 102.995888ms


const GENES_SIZE: usize = 40000;
const POPULATION_SIZE: usize = 200;

   RangeGenotype
      finish - iteration: 0
        Init: 29.726906ms
        Select: 21.111781ms
        Crossover: 2.672950189s
        Mutate: 16.856833ms
        Fitness: 1.710852ms
        UpdateBestChromosome: 142.348514ms
        Other: 283.541265ms
        Total: 3.16824634s
      best_generation: 624, best fitness score: Some(0), duration: 3.168291644s
